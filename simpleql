#!/usr/bin/env bash

db_name=example
dbs_folder="/tmp/simpleql/dbs"
csv_folder="/home/wim/code/github/k8-conf-mgmnt/docs/discovery/db/values/"
command="/home/wim/code/github/k8-conf-mgmnt/docs/discovery/db/tables.sql"
mkdir -p $dbs_folder

print_usage() {
  printf "
Usage: simpleql [OPTION...] 
Easily manage sqlite3 databases. By default .db files are saved to "$dbs_folder".
If ran without options, it lists .db files with fzf.

Examples:
	simpleql -d my-db -c ./db/tables.sql  # Execute .sql script on my-db database.
	simpleql -d my-db -i ./db/values      # Insert .csv values on my-db tables.

Options:
	-d database name in which to execute actions
	-c .sql file to run against a database
	-s select * from a table
	-i folder of .csv files to insert into database; 
       .csv filename must be the same as the database.table
	-h print usage" | bat -l help
}

select_all(){
  sqlite3 -column -header $dbs_folder/${2:-$db_name}.db  "select * from $1;" 
}

# TODO show summary of insert
insert_command() {
	cat $1 | sqlite3 $dbs_folder/${2:-$db_name}.db
}

insert_csv(){
  csv_files=$(find $1 -type f -name '*.csv')
  while read line; do 
    table_name=$(basename $line | awk -F '.' '{print $1}');
    sqlite3 $dbs_folder/${2:-$db_name}.db \
      ".mode csv" ".import $line $table_name"
  done <<< $csv_files
}

while getopts 'hd:c:s:i:' flag; do
  case "${flag}" in
		d) database="${OPTARG}" ;;
    c) command="${OPTARG}" 
			 	insert_command $command $database 
				exit 1;;
    i) csv_folder="${OPTARG}" 
				insert_csv $csv_folder $database
				exit 1;;
    s) table="${OPTARG}" 
				select_all $table $database
				exit 1;;
		h) print_usage
				exit 1;;
    *) print_usage 
				exit 1;;
  esac
done

# TODO table show last modified date
FZF_DEFAULT_COMMAND="
	find $dbs_folder -iname '*.db' \
	-execdir basename -s '.sh' {} + | \
	sed '1i file' | column -t" \
fzf \
	--header-lines=1 \
	--info=inline \
	--layout=reverse \
	--height 60% \
	--prompt "sqlite> " \
	--header $'╱ enter (load); ctrl-d (delete)╱\n\n' \
		--bind "enter:execute(tmux send-keys 'sqlite3 $dbs_folder/{1}' Enter)+abort" \
		--bind "ctrl-d:execute(rm $dbs_folder/{1})+abort" \
		--bind 'ctrl-space:toggle-preview' \
	--preview-window right,hidden,60% \
	--preview '' "$@"

# TODO encrypt database
# TODO show all tables with headers and table format
